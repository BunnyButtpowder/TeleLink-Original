@startuml
actor User
boundary "Create User Page" as Client
participant "<<middlewares>>\ngetAuth" as mid1
participant "<<middlewares>>\ncheckPermission" as mid2
participant "<<action>>\ncreate" as Controller
entity "Auth" as Model1
entity "User" as Model2
entity "Agency" as Model3
database "MySQL" as DB

User -> Client: Enter user account infomation
activate User
activate Client

Client -> mid1: POST /user/create
activate mid1
opt invalid token 
mid1 --> Client: message, 401
end
opt User not exist
mid1 --> Client: message, 401
end
mid1 -> mid2: next()
deactivate mid1
activate mid2
opt API not found
mid2 --> Client: message, 404
end
opt Permission denied
mid2 --> Client: message, 403
end
mid2 -> Controller: next()
deactivate mid2
activate Controller
opt role = 2 but name is null
    Controller --> Client: message, 400
end
Controller -> Model1: findOne(email)
activate Model1
Model1 -> DB: find()
activate DB
DB --> Model1
deactivate DB
opt Email exist 
    Model1 --> Controller: message, 409
    deactivate Model1
end
Controller -> Model1: findOne(username)
activate Model1
Model1 -> DB: find()
activate DB
DB --> Model1
deactivate DB
opt Username exist
    Model1 --> Controller: message, 409
    deactivate Model1
end
Controller -> Model1: Create(AuthInfo)
activate Model1
Model1 -> DB: create()
activate DB
DB --> Model1
deactivate DB

Model1 --> Controller: new record
deactivate Model1
Controller -> Model2: Create(UserInfo)
activate Model2
Model2 -> DB: create()
activate DB
DB --> Model2
deactivate DB
Model2 --> Controller: new record
deactivate Model2
opt Role = 2
Controller -> Model3: create(agencyInfo)
activate Model3
Model3 -> DB: create()
activate DB
DB --> Model3
deactivate DB
Model3 --> Controller: new record
deactivate Model3
Controller --> Client: message, 200
deactivate Controller

end
deactivate Client

@enduml
