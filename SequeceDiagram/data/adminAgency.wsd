@startuml
actor User
boundary "Data page" as Client
participant "<<middlewares>>\ngetAuth" as mid1
participant "<<middlewares>>\ncheckPermission" as mid2
participant "<<action>>\ndata-assign/agency" as Controller
entity "Agency" as Model1
entity "Data" as Model2

database "MySQL" as DB

User -> Client: select agency, quantity, data type
activate User
activate Client
Client -> mid1: POST /data-assign/agency
activate mid1
alt invalid token
    mid1 --> Client: message, 401
end
alt User not exist
    mid1 --> Client: message, 401
end
mid1 -> mid2: next()
deactivate mid1
activate mid2
alt API not found
    mid2 --> Client: message, 404
end
alt Permission denied
    mid2 --> Client: message, 403
end
mid2 -> Controller: next()
deactivate mid2
activate Controller

Controller -> Model1: findOne()
activate Model1
Model1 -> DB: findOne()
activate DB
DB --> Model1
deactivate DB
Model1 --> Controller: agency entity
deactivate Model1
alt Agency not found
    Controller --> Client: message, 404
end
Controller -> Model2: find()
activate Model2
Model2 -> DB: find()
activate DB
DB --> Model2
deactivate DB
Model2 --> Controller: data entity
deactivate Model2
alt No matching data found
    Controller --> Client: message, 404
end
alt No enough data to be distribute
    Controller --> Client: message, 400
end
Controller -> Controller: Shuffle data
Controller -> Model2: update()
activate Model2
Model2 -> DB: update()
activate DB
DB --> Model2
deactivate DB
Model2 --> Controller
deactivate Model2
Controller --> Client: message, 200
deactivate Controller
deactivate Client

@enduml
